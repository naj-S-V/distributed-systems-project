name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/scalable-app:latest
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      
      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          cat << EOF > $HOME/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.MINIKUBE_CA_CERT }}
              server: ${{ secrets.MINIKUBE_SERVER }}
            name: minikube
          contexts:
          - context:
              cluster: minikube
              user: minikube
            name: minikube
          current-context: minikube
          kind: Config
          preferences: {}
          users:
          - name: minikube
            user:
              client-certificate-data: ${{ secrets.MINIKUBE_CLIENT_CERT }}
              client-key-data: ${{ secrets.MINIKUBE_CLIENT_KEY }}
          EOF
          chmod 600 $HOME/.kube/config
      
      - name: Update Kubernetes deployment
        run: |
          # Update the image in deployment.yaml
          sed -i 's|image: scalable-app:latest|image: ${{ secrets.DOCKER_USERNAME }}/scalable-app:latest|' k8s/deployment.yaml
          
          # Apply the updated deployment
          kubectl apply -f k8s/deployment.yaml
          
          # Rollout the deployment to use the new image
          kubectl rollout restart deployment scalable-app -n default